.scroller-container {
	/* variables */
	--gap: 2rem;
}

.scroller-container h2 {
	margin-left: var(--gap);
}

.scroller {
	/* no need for "list-style-type: none"
		since "overflow-x: auto" and childrens "display: inline-block"
		both removes ::markers */
	cursor: grab;
	display: grid;
	grid-auto-flow: column;
	gap: calc(var(--gap) / 2);
	grid-gap: calc(var(--gap) / 2);
	margin: 0;

	padding-inline: var(--gap);
	padding-block: calc(var(--gap) / 2);

	overflow-x: auto;
	overscroll-behavior-x: contain;
	scroll-snap-type: x mandatory;
	scroll-padding-left: var(--gap);
	scroll-padding-right: var(--gap);

	/* Enhance mouse drag-n-flick performance */
	will-change: scroll-position;
	/* Momentum scroll on iOS */
	-webkit-overflow-scrolling: touch;

	/* hide scrollbars */
	/*  - in Firefox */
	overflow: -moz-scrollbars-none;
	scrollbar-width: none;
	/*  - in IE */
	-ms-overflow-style: none;
}

/* - in Safari, Chrome, Edge */
.scroller::-webkit-scrollbar {
	width: 0 !important;
	display: none;
}

.scroller-item {
	display: inline-block;
}

.scroller-item:last-of-type {
	/* fixes last item not entirely on the edge of the screen
		Also the reason for using figure for sizing */
	padding-right: var(--gap);
}

.scroller-item a {
	display: inline-block;
	text-decoration: none;
	color: inherit;
	outline-offset: calc(var(--gap) / 2.5);
	transition: outline-offset .25s ease;
}

.scroller-item a:focus {
	outline-offset: calc(var(--gap) / 4);
}

.scroller-item figure {
	display: grid;
	margin: 0;
	cursor: pointer;
	user-select: none;

	/* Prevents scrolling past more than one child */
	scroll-snap-stop: always;
	scroll-snap-align: start;
	/* let pointer events pass down to a for mousedown etc */
	pointer-events: none;
}

.scroller-item picture {
	inline-size: min(15rem, 200px);
	aspect-ratio: 16/9;
}

.scroller-item img {
	inline-size: 100%;
	block-size: 100%;
	object-fit: cover;
	cursor: grab;

	border-radius: 1ch;
	overflow: hidden;

	/* pre lazy load */
	background-image:
		linear-gradient(to bottom,
			hsl(0 0% 40%),
			hsl(0 0% 20%));
}